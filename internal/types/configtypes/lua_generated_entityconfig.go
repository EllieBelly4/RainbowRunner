// Code generated by scripts/generatelua DO NOT EDIT.
package configtypes

import (
	lua "RainbowRunner/internal/lua"
	lua2 "github.com/yuin/gopher-lua"
)

type IEntityConfig interface {
	GetEntityConfig() *EntityConfig
}

func (e *EntityConfig) GetEntityConfig() *EntityConfig {
	return e
}

func registerLuaEntityConfig(state *lua2.LState) {
	// Ensure the import is referenced in code
	_ = lua.LuaScript{}

	mt := state.NewTypeMetatable("EntityConfig")
	state.SetGlobal("EntityConfig", mt)
	state.SetField(mt, "new", state.NewFunction(newLuaEntityConfig))
	state.SetField(mt, "__index", state.SetFuncs(state.NewTable(),
		luaMethodsEntityConfig(),
	))
}

func luaMethodsEntityConfig() map[string]lua2.LGFunction {
	return lua.LuaMethodsExtend(map[string]lua2.LGFunction{})
}
func newLuaEntityConfig(l *lua2.LState) int {
	obj := NewEntityConfig()
	ud := l.NewUserData()
	ud.Value = obj

	l.SetMetatable(ud, l.GetTypeMetatable("EntityConfig"))
	l.Push(ud)
	return 1
}

func (e *EntityConfig) ToLua(l *lua2.LState) lua2.LValue {
	ud := l.NewUserData()
	ud.Value = e

	l.SetMetatable(ud, l.GetTypeMetatable("EntityConfig"))
	return ud
}
