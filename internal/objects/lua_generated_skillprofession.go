// Code generated by scripts/generatelua DO NOT EDIT.
package objects

import (
	lua "RainbowRunner/internal/lua"
	lua2 "github.com/yuin/gopher-lua"
)

type ISkillProfession interface {
	GetSkillProfession() *SkillProfession
}

func (s *SkillProfession) GetSkillProfession() *SkillProfession {
	return s
}

func registerLuaSkillProfession(state *lua2.LState) {
	// Ensure the import is referenced in code
	_ = lua.LuaScript{}

	mt := state.NewTypeMetatable("SkillProfession")
	state.SetGlobal("SkillProfession", mt)
	state.SetField(mt, "new", state.NewFunction(newLuaSkillProfession))
	state.SetField(mt, "__index", state.SetFuncs(state.NewTable(),
		luaMethodsSkillProfession(),
	))
}

func luaMethodsSkillProfession() map[string]lua2.LGFunction {
	return lua.LuaMethodsExtend(map[string]lua2.LGFunction{}, luaMethodsComponent)
}
func newLuaSkillProfession(l *lua2.LState) int {
	obj := NewSkillProfession(string(l.CheckString(1)))
	ud := l.NewUserData()
	ud.Value = obj

	l.SetMetatable(ud, l.GetTypeMetatable("SkillProfession"))
	l.Push(ud)
	return 1
}

func (s *SkillProfession) ToLua(l *lua2.LState) lua2.LValue {
	ud := l.NewUserData()
	ud.Value = s

	l.SetMetatable(ud, l.GetTypeMetatable("SkillProfession"))
	return ud
}
