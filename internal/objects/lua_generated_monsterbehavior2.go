// Code generated by scripts/generatelua DO NOT EDIT.
package objects

import (
	lua "RainbowRunner/internal/lua"
	"RainbowRunner/pkg/byter"
	lua2 "github.com/yuin/gopher-lua"
)

type IMonsterBehavior2 interface {
	GetMonsterBehavior2() *MonsterBehavior2
}

func (m *MonsterBehavior2) GetMonsterBehavior2() *MonsterBehavior2 {
	return m
}

func registerLuaMonsterBehavior2(state *lua2.LState) {
	// Ensure the import is referenced in code
	_ = lua.LuaScript{}

	mt := state.NewTypeMetatable("MonsterBehavior2")
	state.SetGlobal("MonsterBehavior2", mt)
	state.SetField(mt, "new", state.NewFunction(newLuaMonsterBehavior2))
	state.SetField(mt, "__index", state.SetFuncs(state.NewTable(),
		luaMethodsMonsterBehavior2(),
	))
}

func luaMethodsMonsterBehavior2() map[string]lua2.LGFunction {
	return lua.LuaMethodsExtend(map[string]lua2.LGFunction{
		"monsterBehaviorStateMachineFlags": lua.LuaGenericGetSetNumber[IMonsterBehavior2](func(v IMonsterBehavior2) *byte { return &v.GetMonsterBehavior2().MonsterBehaviorStateMachineFlags }),
		"monsterBehavior2Unk0":             lua.LuaGenericGetSetNumber[IMonsterBehavior2](func(v IMonsterBehavior2) *uint16 { return &v.GetMonsterBehavior2().MonsterBehavior2Unk0 }),
		"monsterBehavior2Unk1":             lua.LuaGenericGetSetNumber[IMonsterBehavior2](func(v IMonsterBehavior2) *uint16 { return &v.GetMonsterBehavior2().MonsterBehavior2Unk1 }),
		"monsterBehavior2Unk2":             lua.LuaGenericGetSetNumber[IMonsterBehavior2](func(v IMonsterBehavior2) *uint16 { return &v.GetMonsterBehavior2().MonsterBehavior2Unk2 }),
		"monsterBehavior2Unk3":             lua.LuaGenericGetSetNumber[IMonsterBehavior2](func(v IMonsterBehavior2) *uint16 { return &v.GetMonsterBehavior2().MonsterBehavior2Unk3 }),
		"monsterBehaviorFlags":             lua.LuaGenericGetSetNumber[IMonsterBehavior2](func(v IMonsterBehavior2) *byte { return &v.GetMonsterBehavior2().MonsterBehaviorFlags }),
		"monsterBehavior2Unk4":             lua.LuaGenericGetSetNumber[IMonsterBehavior2](func(v IMonsterBehavior2) *uint32 { return &v.GetMonsterBehavior2().MonsterBehavior2Unk4 }),
		"monsterBehavior2Unk5":             lua.LuaGenericGetSetNumber[IMonsterBehavior2](func(v IMonsterBehavior2) *uint32 { return &v.GetMonsterBehavior2().MonsterBehavior2Unk5 }),
		"monsterBehavior2Unk6":             lua.LuaGenericGetSetNumber[IMonsterBehavior2](func(v IMonsterBehavior2) *uint16 { return &v.GetMonsterBehavior2().MonsterBehavior2Unk6 }),
		"monsterBehavior2Unk7":             lua.LuaGenericGetSetNumber[IMonsterBehavior2](func(v IMonsterBehavior2) *uint16 { return &v.GetMonsterBehavior2().MonsterBehavior2Unk7 }),
		"monsterBehavior2Unk8":             lua.LuaGenericGetSetNumber[IMonsterBehavior2](func(v IMonsterBehavior2) *uint16 { return &v.GetMonsterBehavior2().MonsterBehavior2Unk8 }),
		"writeInit": func(l *lua2.LState) int {
			objInterface := lua.CheckInterfaceValue[IMonsterBehavior2](l, 1)
			obj := objInterface.GetMonsterBehavior2()
			obj.WriteInit(
				lua.CheckReferenceValue[byter.Byter](l, 2),
			)

			return 0
		},
		"getMonsterBehavior2": func(l *lua2.LState) int {
			objInterface := lua.CheckInterfaceValue[IMonsterBehavior2](l, 1)
			obj := objInterface.GetMonsterBehavior2()
			res0 := obj.GetMonsterBehavior2()
			if res0 != nil {
				l.Push(res0.ToLua(l))
			} else {
				l.Push(lua2.LNil)
			}

			return 1
		},
	}, luaMethodsUnitBehavior)
}
func newLuaMonsterBehavior2(l *lua2.LState) int {
	obj := NewMonsterBehavior2(string(l.CheckString(1)))
	ud := l.NewUserData()
	ud.Value = obj

	l.SetMetatable(ud, l.GetTypeMetatable("MonsterBehavior2"))
	l.Push(ud)
	return 1
}

func (m *MonsterBehavior2) ToLua(l *lua2.LState) lua2.LValue {
	ud := l.NewUserData()
	ud.Value = m

	l.SetMetatable(ud, l.GetTypeMetatable("MonsterBehavior2"))
	return ud
}
