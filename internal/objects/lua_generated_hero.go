// Code generated by scripts/generatelua DO NOT EDIT.
package objects

import (
	lua "RainbowRunner/internal/lua"
	"RainbowRunner/internal/types/drobjecttypes"
	"RainbowRunner/pkg/byter"
	lua2 "github.com/yuin/gopher-lua"
)

type IHero interface {
	GetHero() *Hero
}

func (h *Hero) GetHero() *Hero {
	return h
}

func registerLuaHero(state *lua2.LState) {
	// Ensure the import is referenced in code
	_ = lua.LuaScript{}

	mt := state.NewTypeMetatable("Hero")
	state.SetGlobal("Hero", mt)
	state.SetField(mt, "new", state.NewFunction(newLuaHero))
	state.SetField(mt, "__index", state.SetFuncs(state.NewTable(),
		luaMethodsHero(),
	))
}

func luaMethodsHero() map[string]lua2.LGFunction {
	return lua.LuaMethodsExtend(map[string]lua2.LGFunction{
		"expThisLevel":        lua.LuaGenericGetSetNumber[IHero](func(v IHero) *uint32 { return &v.GetHero().ExpThisLevel }),
		"strength":            lua.LuaGenericGetSetNumber[IHero](func(v IHero) *uint16 { return &v.GetHero().Strength }),
		"agility":             lua.LuaGenericGetSetNumber[IHero](func(v IHero) *uint16 { return &v.GetHero().Agility }),
		"endurance":           lua.LuaGenericGetSetNumber[IHero](func(v IHero) *uint16 { return &v.GetHero().Endurance }),
		"intellect":           lua.LuaGenericGetSetNumber[IHero](func(v IHero) *uint16 { return &v.GetHero().Intellect }),
		"statPointsRemaining": lua.LuaGenericGetSetNumber[IHero](func(v IHero) *uint16 { return &v.GetHero().StatPointsRemaining }),
		"respecSomething":     lua.LuaGenericGetSetNumber[IHero](func(v IHero) *uint16 { return &v.GetHero().RespecSomething }),
		"heroUnk0":            lua.LuaGenericGetSetNumber[IHero](func(v IHero) *uint32 { return &v.GetHero().HeroUnk0 }),
		"heroUnk1":            lua.LuaGenericGetSetNumber[IHero](func(v IHero) *uint32 { return &v.GetHero().HeroUnk1 }),

		"writeInit": func(l *lua2.LState) int {
			objInterface := lua.CheckInterfaceValue[IHero](l, 1)
			obj := objInterface.GetHero()
			obj.WriteInit(
				lua.CheckReferenceValue[byter.Byter](l, 2),
			)

			return 0
		},

		"addChild": func(l *lua2.LState) int {
			objInterface := lua.CheckInterfaceValue[IHero](l, 1)
			obj := objInterface.GetHero()
			obj.AddChild(
				lua.CheckValue[drobjecttypes.DRObject](l, 2),
			)

			return 0
		},

		"getHero": func(l *lua2.LState) int {
			objInterface := lua.CheckInterfaceValue[IHero](l, 1)
			obj := objInterface.GetHero()
			res0 := obj.GetHero()
			if res0 != nil {
				l.Push(res0.ToLua(l))
			} else {
				l.Push(lua2.LNil)
			}

			return 1
		},
	}, luaMethodsUnit)
}
func newLuaHero(l *lua2.LState) int {
	obj := NewHero(string(l.CheckString(1)))
	ud := l.NewUserData()
	ud.Value = obj

	l.SetMetatable(ud, l.GetTypeMetatable("Hero"))
	l.Push(ud)
	return 1
}

func (h *Hero) ToLua(l *lua2.LState) lua2.LValue {
	ud := l.NewUserData()
	ud.Value = h

	l.SetMetatable(ud, l.GetTypeMetatable("Hero"))
	return ud
}
