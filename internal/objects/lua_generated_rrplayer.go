// Code generated by scripts/generatelua DO NOT EDIT.
package objects

import (
	lua "RainbowRunner/internal/lua"
	lua2 "github.com/yuin/gopher-lua"
)

type IRRPlayer interface {
	GetRRPlayer() *RRPlayer
}

func (r *RRPlayer) GetRRPlayer() *RRPlayer {
	return r
}

func registerLuaRRPlayer(state *lua2.LState) {
	// Ensure the import is referenced in code
	_ = lua.LuaScript{}

	mt := state.NewTypeMetatable("RRPlayer")
	state.SetGlobal("RRPlayer", mt)
	state.SetField(mt, "__index", state.SetFuncs(state.NewTable(),
		luaMethodsRRPlayer(),
	))
}

func luaMethodsRRPlayer() map[string]lua2.LGFunction {
	return luaMethodsExtend(map[string]lua2.LGFunction{
		"currentCharacter": luaGenericGetSetValue[IRRPlayer, *Player](func(v IRRPlayer) **Player { return &v.GetRRPlayer().CurrentCharacter }),
		"getRRPlayer": func(l *lua2.LState) int {
			objInterface := lua.CheckInterfaceValue[IRRPlayer](l, 1)
			obj := objInterface.GetRRPlayer()
			res0 := obj.GetRRPlayer()
			if res0 != nil {
				l.Push(res0.ToLua(l))
			} else {
				l.Push(lua2.LNil)
			}

			return 1
		},
		"zone": func(l *lua2.LState) int {
			objInterface := lua.CheckInterfaceValue[IRRPlayer](l, 1)
			obj := objInterface.GetRRPlayer()
			res0 := obj.Zone()
			if res0 != nil {
				l.Push(res0.ToLua(l))
			} else {
				l.Push(lua2.LNil)
			}

			return 1
		},
		"onZoneJoin": func(l *lua2.LState) int {
			objInterface := lua.CheckInterfaceValue[IRRPlayer](l, 1)
			obj := objInterface.GetRRPlayer()
			obj.OnZoneJoin()

			return 0
		},
		"leaveZone": func(l *lua2.LState) int {
			objInterface := lua.CheckInterfaceValue[IRRPlayer](l, 1)
			obj := objInterface.GetRRPlayer()
			obj.LeaveZone()

			return 0
		},
		"joinZone": func(l *lua2.LState) int {
			objInterface := lua.CheckInterfaceValue[IRRPlayer](l, 1)
			obj := objInterface.GetRRPlayer()
			obj.JoinZone(
				lua.CheckReferenceValue[Zone](l, 2),
			)

			return 0
		},
	})
}

func (r *RRPlayer) ToLua(l *lua2.LState) lua2.LValue {
	ud := l.NewUserData()
	ud.Value = r

	l.SetMetatable(ud, l.GetTypeMetatable("RRPlayer"))
	return ud
}
